?log
log(64,4)
log(10000,10)
log(100000,10)
log(1,1000)
log(64,2)
log(7^5,7)
?floor
my_f <- function(n) {
i = 0
while(n > 1) {
n = floor(sqrt(n))
i = i + 1
}
return(i)
}
myf <- function(n) {
i = 0
while(n > 1) {
n = floor(sqrt(n))
i = i + 1
}
return(i)
}
f <- function(n) {
i = 0
while(n > 1) {
n = floor(sqrt(n))
i = i + 1
}
return(i)
}
f(10)
f(100)
f(1000)
log(log(1000,2))
log(log(10000,2))
log(10000,2)
log(1000,2)
log(100,2)
log(10,2)
log(100,2)
log(1000,2)
log(10000,2)
log(100000,2)
log(1000000,2)
f(10)
f(100)
f(1000)
f(1000)
f(10000)
fn <- function(n) {
i = 0
while(n > 1) {
n = floor(sqrt(n))
i = i + 1
}
return(i)
}
f(10)
f(100)
f(1000)
f(10000)
f(100000)
shiny::runApp('GitHub/CIdemo')
`prop.test
`
x <- rnorm(100)
y <- 2*x + rnorm(100)
mylm <- lm(y~x)
plot(mylm)
plot(mylm)
plot(mylm)
tomorrow <- c("cat attacks baby","world ends","I eat pasta")
p <- c(0.2, 0.3, 0.5)
sample(tomorrow, prob = p)
sample(tomorrow, n = 1, prob = p)
sample(tomorrow, size = 1, prob = p)
sample(tomorrow, size = 1, prob = p)
sample(tomorrow, size = 1, prob = p)
sample(tomorrow, size = 100, prob = p)
sample(tomorrow, size = 100, replace = T, prob = p)
x <- sample(tomorrow, size = 100, replace = T, prob = p)
barplot(table(x))
x <- sample(tomorrow, size = 100, replace = T, prob = p)
barplot(table(x))
barplot(table(x), horiz = T)
barplot(table(x))
barplot(table(x), freq = T)
barplot(table(x))
barplot(table(x))
tomorrow <- c("cat attacks baby","world ends","I eat pasta")
probabilities <- c(0.2, 0.3, 0.5)
sample(tomorrow, size = 1, prob = probabilities)
sample(tomorrow, size = 1, prob = probabilities)
sample(tomorrow, size = 1, prob = probabilities)
tomorrow <- c("cat attacks baby","world ends","I eat pasta")
probabilities <- c(0.2, 0.3, 0.5)
# draw a sample
sample(tomorrow, size = 1, prob = probabilities)
x <- sample(tomorrow, size = 100, replace = T, prob = probabilities)
barplot(prop.table(x))
barplot(table(x))
prop.table(x)
table(x)
prop.table(table(x))
barplot(prop.table(table(x)))
?barplot
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
open_meta <- function() browseURL("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-meta.txt")
open_meta()
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
students2014 <- students2014[,c("sukup","toita","ika","pituus","q3b","q3c","q3e","q3j")]
str(students2014)
students2014$kone <- addNA(students2014$kone)
str(students2014)
sum(complete.cases(students2014))
nrow(students2014)
students2014 <- students2014[complete.cases(students2014),]
students2014$ika <- as.numeric(students2014$ika)
students2014$pituus <- as.numeric(students2014$pituus)
summary(students2014)
apply(students2014[,5:8],2, table)
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
students2014 <- students2014[,c("sukup","toita","ika","pituus","q3b","q3j","q3c","q3e")]
students2014 <- students2014[complete.cases(students2014),]
students2014$ika <- as.numeric(students2014$ika)
students2014$pituus <- as.numeric(students2014$pituus)
apply(students2014[,5:8],2, table)
head(students2014)
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
students2014 <- students2014[,c("sukup","kone","ika","pituus","q3b","q3j","q3c","q3e")]
students2014$kone <- addNA(students2014$kone)
students2014 <- students2014[complete.cases(students2014),]
students2014$ika <- as.numeric(students2014$ika)
students2014$pituus <- as.numeric(students2014$pituus)
head(students2014)
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
# keep a couple background variables and couple questions
students2014 <- students2014[,c("sukup","kone","ika","pituus","q3b","q3j","q3c","q3e", "q3g","q3h")]
# recode kone -variable NA values as factor levels
students2014$kone <- addNA(students2014$kone)
sum(complete.cases(students2014))
nrow(students2014)
students2014 <- students2014[complete.cases(students2014),]
students2014$ika <- as.numeric(students2014$ika)
students2014$pituus <- as.numeric(students2014$pituus)
head(students2014)
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
# keep a couple background variables and couple questions
students2014 <- students2014[,c("sukup","kone","ika","pituus","q3b","q3j","q3d","q3i","q3g","q3h")]
# recode kone -variable NA values as factor levels
students2014$kone <- addNA(students2014$kone)
sum(complete.cases(students2014))
students2014 <- students2014[complete.cases(students2014),]
students2014$ika <- as.numeric(students2014$ika)
students2014$pituus <- as.numeric(students2014$pituus)
head(students2014)
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
# keep a couple background variables
students2014 <- students2014[,c("sukup","toita","ika","pituus","kenka","kone")]
# recode kone -variable NA values as factor levels
students2014$kone <- addNA(students2014$kone)
# choose rows without missing values
students2014 <- students2014[complete.cases(students2014),]
# integers to numeric
students2014$ika <- as.numeric(students2014$ika)
students2014$pituus <- as.numeric(students2014$pituus)
students2014$kenka <- as.numeric(students2014$kenka)
head(students2014)
students2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS-data.txt", sep="\t", header=TRUE)
# keep a couple background variables and couple questions
students2014 <- students2014[,c("sukup","kone","ika","pituus","q3b","q3j","q3d","q3i","q3g","q3h")]
# recode kone -variable NA values as factor levels
students2014$kone <- addNA(students2014$kone)
# choose rows without missing values
students2014 <- students2014[complete.cases(students2014),]
# integers to numeric
students2014$ika <- as.numeric(students2014$ika)
students2014$pituus <- as.numeric(students2014$pituus)
head(students2014)
getwd()
swap <- function(A, i, j) {
apu = A[i]
A[i] <- A[j]
A[j] <- apu
A
}
jarjesta <- function(A, n = length(A)) {
for(i in 1:n) {
swap(A, i, sample(1:n))
}
}
swap <- function(A, i, j) {
apu = A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n = length(A)) {
for(i in 1:n) {
swap(A, i, sample(1:n))
}
}
suffle(1:4)
?sample
swap <- function(A, i, j) {
apu = A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n = length(A)) {
for(i in 1:n) {
swap(A, i, sample(1:n, size = 1))
}
}
suffle(1:4)
swap <- function(A, i, j) {
apu = A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n = length(A)) {
for(i in 1:n) {
swap(A, i, sample(1:n, size = 1))
}
A
}
suffle(1:4)
swap <- function(A, i, j) {
apu = A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n = length(A)) {
for(i in 1:n) {
A <- swap(A, i, sample(1:n, size = 1))
}
A
}
suffle(1:4)
suffle(1:4)
suffle(1:4)
suffle(1:4)
suffle(1:4)
suffle(1:4)
suffle(1:4)
suffle(1:4)
tulokset <- matrix(NA, nrow = N, ncol = n)
N <- 1000
n <- 10
tulokset <- matrix(NA, nrow = N, ncol = n)
tulokset
str(tulokset)
for(i in 1:N) {
tulokset[i,] <- suffle(1:n)
}
apply(tulokset, 2, table)
N <- 10000
n <- 10
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(1:n)
}
apply(tulokset, 2, table)
n <- 4
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(1:n)
}
apply(tulokset, 2, table)
n <- 10
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(1:n)
}
apply(tulokset, 2, table)
suffle <- function(A, n) {
for(i in 1:n) {
A <- swap(A, i, sample(1:n, size = 1))
}
A
}
swap <- function(A, i, j) {
apu <- A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n) {
for(i in 1:n) {
A <- swap(A, i, sample(1:n, size = 1))
}
A
}
N <- 10000
n <- 10
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(1:n, n = n)
}
apply(tulokset, 2, table)
swap <- function(A, i, j) {
apu <- A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n) {
for(i in 1:n) {
A <- swap(A, i, sample(1:n, size = 1))
}
A
}
N <- 10000; n <- 10
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(1:n, n = n)
}
apply(tulokset, 2, table)
sample(1:10, size=1)
sample(1:10, size=1)
sample(1:10, size=1)
sample(1:10, size=1)
sample(1:10, size=1)
N <- 10000; n <- 10; A <- 1:n
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(A, n = n)
}
apply(tulokset, 2, table)
table(sample(1:10, size = 100000, replace = T))
table(sapply(1:10000, sample(1:10, size = 1)))
table(sapply(1:10000, sample,  x = 1:10, size = 1))
table(sapply(1:100000, sample,  x = 1:10, size = 1))
swap <- function(A, i, j) {
apu <- A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n) {
for(i in 1:n) {
A <- swap(A, i, sample(1:n, size = 1, replace = T))
}
A
}
N <- 10000; n <- 10; A <- 1:n
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(A, n = n)
}
apply(tulokset, 2, table)
swap <- function(A, i, j) {
apu <- A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n) {
for(i in 1:n) {
A <- swap(A, i, sample(1:n, size = 1, replace = T))
}
A
}
N <- 10000; n <- 10; A <- 1:n
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(A, n = n)
}
apply(tulokset, 2, table)
swap <- function(A, i, j) {
apu <- A[i]
A[i] <- A[j]
A[j] <- apu
A
}
suffle <- function(A, n) {
for(i in 1:n) {
A <- swap(A, i, sample(i:n, size = 1, replace = T))
}
A
}
N <- 10000; n <- 10; A <- 1:n
tulokset <- matrix(NA, nrow = N, ncol = n)
for(i in 1:N) {
tulokset[i,] <- suffle(A, n = n)
}
apply(tulokset, 2, table)
?complete.cases
c("arho","tuomo","niina") | c("blaa", "blöö", "niina")
is.na(c("arho","tuomo","niina") | c("blaa", "blöö", "niina"))
c(1,2,3) | c(1,2,3)
c(1,2,3) | c(1,2,7)
c(1,2,3) | c(1,2,NA)
c(1,2,NA) | c(1,2,NA)
c(1,2,3) | c(1,2,NA)
c(1,2,3) & c(1,2,NA)
c(0,2,3) & c(0,2,NA)
c(0,2,3) & c(1,2,NA)
c(0,2,3) & c(1,5,NA)
c(-1,2,3) & c(1,5,NA)
tweeter <- "alexstubb"
filepath <- paste0("data/",tweeter,"_tweets.Rda")
tw <- get(load(filepath))
getwd()
setwd("~/GitHub/StubbTweets")
source("utility/functions.R")
tweeter <- "alexstubb"
filepath <- paste0("data/",tweeter,"_tweets.Rda")
tw <- get(load(filepath))
tweeter_languages <- unique(tw$languages)
min(tw$created)
mindate <- format(min(tw$created),"%d.%m.%Y")
maxdate <- format(max(tw$created),"%d.%m.%Y")
ntweets <- nrow(tw)
kable(mindate, maxdate,ntweets)
library(knitr)
kable(mindate, maxdate,ntweets)
